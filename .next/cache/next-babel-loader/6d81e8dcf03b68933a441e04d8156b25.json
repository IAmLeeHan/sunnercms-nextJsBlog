{"ast":null,"code":"var _jsxFileName = \"/Users/sunnercms/Desktop/Next.js-Blog/pages/index.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport Layout, { siteTitle } from '../components/Layout/index';\nimport utilStyles from '../styles/utils.module.css';\nimport Link from 'next/link';\nimport Date from '../components/Date/index'; // 从本质上讲，getStaticProps允许您告诉Next.js：“嘿，此页面具有某些数据依赖关系-因此，在构建时预渲染此页面时，请确保先解决它们！”\n// getStaticProps运行只在服务器端。\n// 它永远不会在客户端上运行。它甚至不会包含在浏览器的JS包中。这意味着您可以编写诸如直接数据库查询之类的代码，而无需将其发送到浏览器。\n\nexport var __N_SSG = true;\nexport default function Home(_ref) {\n  var _this = this;\n\n  var allPostsData = _ref.allPostsData;\n  return __jsx(Layout, {\n    home: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, siteTitle)), __jsx(\"section\", {\n    className: utilStyles.headingMd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"[Your Self Introduction]\")), __jsx(\"section\", {\n    className: \"\".concat(utilStyles.headingMd, \" \").concat(utilStyles.padding1px),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    className: utilStyles.headingLg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"Blog\"), __jsx(\"ul\", {\n    className: utilStyles.list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, allPostsData.map(function (_ref2) {\n    var id = _ref2.id,\n        date = _ref2.date,\n        title = _ref2.title;\n    return __jsx(\"li\", {\n      className: utilStyles.listItem,\n      key: id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, __jsx(Link, {\n      href: \"/posts/[id]\",\n      as: \"/posts/\".concat(id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, title)), __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }\n    }), __jsx(\"small\", {\n      className: utilStyles.lightText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    }, __jsx(Date, {\n      dateString: date,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    })));\n  }))));\n}\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/sunnercms/Desktop/Next.js-Blog/pages/index.jsx"],"names":["Head","Layout","siteTitle","utilStyles","Link","Date","Home","allPostsData","headingMd","padding1px","headingLg","list","map","id","date","title","listItem","lightText"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,IAAiBC,SAAjB,QAAkC,4BAAlC;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,0BAAjB,C,CAEA;AACA;AACA;;;AAWA,eAAe,SAASC,IAAT,OAAgC;AAAA;;AAAA,MAAhBC,YAAgB,QAAhBA,YAAgB;AAC7C,SACE,MAAC,MAAD;AAAQ,IAAA,IAAI,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQL,SAAR,CADF,CADF,EAIE;AAAS,IAAA,SAAS,EAAEC,UAAU,CAACK,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,CAJF,EAOE;AAAS,IAAA,SAAS,YAAKL,UAAU,CAACK,SAAhB,cAA6BL,UAAU,CAACM,UAAxC,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAEN,UAAU,CAACO,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAI,IAAA,SAAS,EAAEP,UAAU,CAACQ,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,YAAY,CAACK,GAAb,CAAiB;AAAA,QAAGC,EAAH,SAAGA,EAAH;AAAA,QAAOC,IAAP,SAAOA,IAAP;AAAA,QAAaC,KAAb,SAAaA,KAAb;AAAA,WAChB;AAAI,MAAA,SAAS,EAAEZ,UAAU,CAACa,QAA1B;AAAoC,MAAA,GAAG,EAAEH,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,aAAX;AAAyB,MAAA,EAAE,mBAAYA,EAAZ,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIE,KAAJ,CADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAME;AAAO,MAAA,SAAS,EAAEZ,UAAU,CAACc,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,UAAU,EAAEH,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CANF,CADgB;AAAA,GAAjB,CADH,CAFF,CAPF,CADF;AA2BD;KA5BuBR,I","sourcesContent":["import Head from 'next/head'\nimport Layout, { siteTitle } from '../components/Layout/index'\nimport utilStyles from '../styles/utils.module.css'\nimport { getSortedPostsData } from '../lib/posts'\nimport Link from 'next/link'\nimport Date from '../components/Date/index'\n\n// 从本质上讲，getStaticProps允许您告诉Next.js：“嘿，此页面具有某些数据依赖关系-因此，在构建时预渲染此页面时，请确保先解决它们！”\n// getStaticProps运行只在服务器端。\n// 它永远不会在客户端上运行。它甚至不会包含在浏览器的JS包中。这意味着您可以编写诸如直接数据库查询之类的代码，而无需将其发送到浏览器。\n\nexport async function getStaticProps() {\n  const allPostsData = getSortedPostsData()\n  return {\n    props: {\n      allPostsData\n    }\n  }\n}\n\nexport default function Home({ allPostsData }) {\n  return (\n    <Layout home>\n      <Head>\n        <title>{siteTitle}</title>\n      </Head>\n      <section className={utilStyles.headingMd}>\n        <p>[Your Self Introduction]</p>\n      </section>\n      <section className={`${utilStyles.headingMd} ${utilStyles.padding1px}`}>\n        <h2 className={utilStyles.headingLg}>Blog</h2>\n        <ul className={utilStyles.list}>\n          {allPostsData.map(({ id, date, title }) => (\n            <li className={utilStyles.listItem} key={id}>\n              <Link href=\"/posts/[id]\" as={`/posts/${id}`}>\n                <a>{title}</a>\n              </Link>\n              <br />\n              {/* <small> 标签定义小型文本（和旁注）。 */}\n              <small className={utilStyles.lightText}>\n                <Date dateString={date} />\n              </small>\n            </li>\n          ))}\n        </ul>\n      </section>\n    </Layout>\n  )\n}\n\n"]},"metadata":{},"sourceType":"module"}